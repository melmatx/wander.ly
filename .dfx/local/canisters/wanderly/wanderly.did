<<<<<<< HEAD
service : {
=======
type User = 
 record {
   achievementsId: opt text;
   id: opt text;
   nickname: text;
   points: opt float64;
 };
type Task = 
 record {
   description: text;
   emoji: text;
   id: opt text;
   taskType: variant {
               DistanceBased;
               StepBased;
               TimeBased;
             };
   timeEnd: text;
   timeOfDay: variant {
                Afternoon;
                Evening;
                Morning;
              };
   timeStart: text;
   title: text;
 };
type Result_3 = 
 variant {
   err: MessageResult;
   ok: record {
         id: text;
         message: text;
       };
 };
type Result_2 = 
 variant {
   err: MessageResult;
   ok: Task;
 };
type Result_1 = 
 variant {
   err: MessageResult;
   ok: opt text;
 };
type Result = 
 variant {
   err: MessageResult;
   ok: MessageResult;
 };
type MessageResult = record {message: text;};
service : {
  createTask: (text, Task) -> (Result);
  createUser: (User) -> (Result_3);
  getAfternoonTaskList: (text) -> (Result_2);
  getAllMorningTaskList: () -> (vec record {
                                      text;
                                      Task;
                                    });
  getEveningTaskList: (text) -> (Result_2);
  getMorningTaskList: (text) -> (Result_2);
  getUser: (principal) -> (Result_1);
  updateUserNickname: (User) -> (Result);
>>>>>>> 203fe7733cbf1d7cea5c1b9abc0418b63dbad3c7
}
